version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: voice-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - voice-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  voice-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: voice-chatbot-server
    ports:
      - "8080:8080"  # Single port for both REST API and WebSocket (Cloud Run style)
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - REDIS_URL=redis://redis:6379/0
      - PORT=8080  # Cloud Run style PORT environment variable
      - SEND_SAMPLE_RATE=16000
      - RECEIVE_SAMPLE_RATE=24000
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - voice-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

volumes:
  redis_data:

networks:
  voice-network:
    driver: bridge